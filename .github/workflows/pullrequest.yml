
name: Build Graphql Filters

on:
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.head_ref }}
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
    - name: Restore dependencies
      run: dotnet restore
      working-directory: ./src/GraphQL.Filters
    - name: Generate test badge
      uses: jaywcjlove/generated-badges@main
      with:
        label: Test
        status: notrun
        color: red
        output: docs/testoutcome.svg
    - name: Build
      run: dotnet build --no-restore -c Release
      working-directory: ./src/GraphQL.Filters
    - name: Test
      run: dotnet test --no-build -c Release --verbosity normal --collect "XPlat Code Coverage" --results-directory coverage
      working-directory: ./src/GraphQL.Filters
    - name: Make SpecFlow Documentation
      working-directory: ./src/GraphQL.Filters/GraphQL.Filters.Tests
      run: |
        dotnet new tool-manifest
        dotnet tool install SpecFlow.Plus.LivingDoc.CLI
        dotnet livingdoc livingdoc test-assembly ./bin/Release/net6.0/GraphQL.Filters.Tests.dll -t ./bin/Release/net6.0/TestExecution.json --output ../../../docs/tests/GraphQL.Filters.Specflow.html
    - name: ReportGenerator
      uses: danielpalme/ReportGenerator-GitHub-Action@5.2.1
      with:
        reports: ./src/GraphQL.Filters/coverage/**/coverage.cobertura.xml
        targetdir: ./docs/coverage
        reporttypes: HtmlInline;Badges;
    - name: Generate test badge
      uses: jaywcjlove/generated-badges@main
      with:
        label: Test
        status: succesfull
        color: green
        output: docs/testoutcome.svg
    - uses: stefanzweifel/git-auto-commit-action@v5
      with:
        # Optional. Commit message for the created commit.
        # Defaults to "Apply automatic changes"
        commit_message: Automated documents
    
        # # Optional. Local and remote branch name where commit is going to be pushed
        # #  to. Defaults to the current branch.
        # #  You might need to set `create_branch: true` if the branch does not exist.
        # branch: feature-123
    
        # # Optional. Options used by `git-commit`.
        # # See https://git-scm.com/docs/git-commit#_options
        # commit_options: '--no-verify --signoff'
    
        # # Optional glob pattern of files which should be added to the commit
        # # Defaults to all (.)
        # # See the `pathspec`-documentation for git
        # # - https://git-scm.com/docs/git-add#Documentation/git-add.txt-ltpathspecgt82308203
        # # - https://git-scm.com/docs/gitglossary#Documentation/gitglossary.txt-aiddefpathspecapathspec
        file_pattern: './docs/*'
    
        # # Optional. Local file path to the repository.
        # # Defaults to the root of the repository.
        # repository: .
    
        # # Optional commit user and author settings
        # commit_user_name: My GitHub Actions Bot # defaults to "github-actions[bot]"
        # commit_user_email: my-github-actions-bot@example.org # defaults to "41898282+github-actions[bot]@users.noreply.github.com"
        # commit_author: Author <actions@github.com> # defaults to "username <username@users.noreply.github.com>", where "username" belongs to the author of the commit that triggered the run
    
        # # Optional. Tag name being created in the local repository and 
        # # pushed to remote repository and defined branch.
        # tagging_message: 'v1.0.0'
    
        # # Optional. Option used by `git-status` to determine if the repository is 
        # # dirty. See https://git-scm.com/docs/git-status#_options
        # status_options: '--untracked-files=no'
    
        # # Optional. Options used by `git-add`.
        # # See https://git-scm.com/docs/git-add#_options
        # add_options: '-u'
    
        # # Optional. Options used by `git-push`.
        # # See https://git-scm.com/docs/git-push#_options
        # push_options: '--force'
        
        # # Optional. Disable dirty check and always try to create a commit and push
        skip_dirty_check: false    
        
        # # Optional. Skip internal call to `git fetch`
        # skip_fetch: true    
        
        # # Optional. Skip internal call to `git checkout`
        # skip_checkout: true
    
        # # Optional. Prevents the shell from expanding filenames. 
        # # Details: https://www.gnu.org/software/bash/manual/html_node/Filename-Expansion.html
        # disable_globbing: true
    
        # # Optional. Create given branch name in local and remote repository.
        # create_branch: true
    # - name: push docs
    #   run: |
    #     ls -l ./docs/*
    #     git config --global user.email "pr@titaniumt.nl"
    #     git config --global user.name "AutomatedAction"
    #     git add -A ./docs/*
    #     git pull origin HEAD:$GITHUB_HEAD_REF
    #     git commit -m documentation
    #     git push origin HEAD:$GITHUB_HEAD_REF
    
     
