
name: Build Graphql Filters

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
    - name: Restore dependencies
      run: dotnet restore
      working-directory: ./src/GraphQL.Filters
    - name: Build
      run: dotnet build --no-restore -c Release
      working-directory: ./src/GraphQL.Filters
    - name: Test
      run: dotnet test --no-build -c Release --verbosity normal --collect "XPlat Code Coverage" --results-directory coverage
      working-directory: ./src/GraphQL.Filters
    - name: Make SpecFlow Documentation
      working-directory: ./src/GraphQL.Filters/GraphQL.Filters.Tests
      run: |
        dotnet new tool-manifest
        dotnet tool install SpecFlow.Plus.LivingDoc.CLI
        dotnet livingdoc livingdoc test-assembly ./bin/Release/net8.0/GraphQL.Filters.Tests.dll -t ./bin/Release/net8.0/TestExecution.json --output GraphQL.Filters.Specflow.html
    - name: Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: ./src/GraphQL.Filters/coverage/**/coverage.cobertura.xml
        badge: true
        fail_below_min: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '60 80'

    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md

     
